{% for altserver in server_names[1:] %}
server {
    listen *:80;
    listen *:443 ssl;
    listen [::]:80;
    listen [::]:443 ssl;
    server_name {{altserver}};

    ssl_certificate     /etc/letsencrypt/live/{{nginx_certname}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{nginx_certname}}/privkey.pem;

    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH !EDH+aRSA !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

    return 301 https://{{nginx_server_names[0]}}$request_uri;
}

{% endfor %}

server {
    listen *:80 default_server;
    listen [::]:80 default_server;
    server_name {{nginx_server_names[0]}};

    return 301 https://{{nginx_server_names[0]}}$request_uri;
}

server {
    listen *:443 ssl;
    listen [::]:443 ssl;
    server_name {{nginx_server_names[0]}};

    ssl_certificate     /etc/letsencrypt/live/{{nginx_certname}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{nginx_certname}}/privkey.pem;

    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH !EDH+aRSA !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

    root /var/www/html;

    location / {
        if (-f $document_root/active_maintenance.html) {
            return 503;
        }
        try_files $uri @wheelodex;
    }

    location @wheelodex {
        include uwsgi_params;
        uwsgi_pass unix:{{nginx_uwsgi_socket}};
    }

    error_page 503 /active_maintenance.html;

    location = /active_maintenance.html { }
}
