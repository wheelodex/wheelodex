---
- name: Assert server_names is defined and nonempty
  ansible.builtin.assert:
    that: 'nginx_server_names is defined and (nginx_server_names|length > 0)'

- name: Install Nginx
  ansible.builtin.apt:
    name: nginx-full
    state: present
    update_cache: false

- name: Configure Nginx
  ansible.builtin.template:
    src: wheelodex.conf
    dest: /etc/nginx/sites-available/wheelodex.conf
    mode: "0644"
  notify:
    - Restart Nginx

- name: Enable Nginx site configuration
  ansible.builtin.file:
    src: /etc/nginx/sites-available/wheelodex.conf
    path: /etc/nginx/sites-enabled/wheelodex.conf
    state: link
  notify:
    - Restart Nginx

- name: Disable default Nginx site configuration
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify:
    - Restart Nginx

- name: Create "Down for Maintenance" page
  ansible.builtin.copy:
    src: maintenance.html
    dest: /var/www/html/maintenance.html
    mode: "0644"

- name: Create scripts for starting & stopping maintenance mode
  ansible.builtin.copy:
    src: "{{ item }}.sh"
    dest: /usr/local/bin/{{ item }}
    mode: "0755"
  with_items:
    - start-maintenance
    - stop-maintenance

- name: Install Certbot
  community.general.snap:
    name: certbot
    classic: true
    state: present

- name: Link certbot executable
  ansible.builtin.file:
    src: /snap/bin/certbot
    path: /usr/bin/certbot
    state: link

- name: Get SSL certificates
  ### TODO: Ensure this does nothing when nginx_server_names is unchanged
  ansible.builtin.command: |
    certbot run
        --nginx
        --rsa-key-size 4096
        --expand
        --cert-name {{ nginx_certname | quote }}
        --email {{ nginx_certbot_email | quote }}
        --domains {{ nginx_server_names | join(',') | quote }}
        --non-interactive
        --agree-tos
  changed_when: true
